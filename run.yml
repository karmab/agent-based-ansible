---
- hosts: localhost
  connection: local
  tasks:
  - name: Load pull_secret
    include_vars:
      file: "{{ pull_secret|default('openshift_pull.json') }}"
      name: pull_secret_data
  - name: Set pull_secret_data variable
    set_fact:
      pull_secret_data: "{{ pull_secret_data | to_json(separators=(',',':')) }}"
  - name: Grab disconnected ca
    register: ca_content
    ansible.builtin.shell:
      cmd: "openssl s_client -showcerts -connect {{ disconnected_url }} </dev/null 2>/dev/null | openssl x509 -outform PEM"
    when: disconnected_url is defined and ca is not defined
  - name: Set ca variable
    set_fact: 
     ca={{ ca_content.stdout }}
    when: disconnected_url is defined and ca is not defined
  - name: Create Billi directory to hold assets
    ansible.builtin.file:
      path: billi
      state: directory
      mode: '0755'
  - name: Render install config
    ansible.builtin.template:
      src: install-config.yaml.j2
      dest: billi/install-config.yaml
  - name: Render agent config
    ansible.builtin.template:
      src: agent-config.yaml.j2
      dest: billi/agent-config.yaml
  - name: Copy manifests
    copy:
      src: manifests
      dest: billi
    when: '"manifests" is directory'
  - name: Template get_installer.sh.j2
    template:
      src: get_installer.sh.j2
      dest: get_installer.sh
    when: disconnected_url is not defined
  - name: Grab openshift-install from internet
    ansible.builtin.command:
      cmd: bash get_installer.sh
      creates: openshift-install
#  - meta: end_play
    when: disconnected_url is not defined
  - name: Grab openshift-install from disconnected registry
    ansible.builtin.command:
      cmd: oc adm release extract --registry-config {{ pull_secret|default('openshift_pull.json') }} --command=openshift-install --to . {{ disconnected_url }}/{{ disconnected_prefix|default('ocp4') }}:{{ version|default('4.12-x86_64') }} --insecure
      creates: openshift-install
    when: disconnected_url is defined
  - name: Generate iso
    ansible.builtin.command:
      cmd: ./openshift-install agent create image --dir billi --log-level debug
      creates: billi/agent.x86_64.iso
  - name: Remove old agent iso
    ansible.builtin.file:
      path: /var/www/html/{{ cluster }}.iso
      state: absent
  - name: Copy agent iso to /var/www/html
    become: yes
    command: cp billi/agent.x86_64.iso /var/www/html/{{ cluster }}.iso
  - name: Get all users
    getent:
      database: passwd
      split: ':'
  - name: Make agent iso available
    become: yes
    file:
      path: /var/www/html/{{ cluster }}.iso
      owner: apache
      group: apache
    when: ( "apache" in getent_passwd.keys() )
  - name: Boot hosts with iso
    ansible.builtin.command:
      cmd: "{{ playbook_dir }}/boot.py {{Â ansible_inventory_sources[0] }}"
  - name: Remove agent iso
    ansible.builtin.file:
      path: billi/agent.x86_64.iso
      state: absent
  - name: Remove install-config.yaml
    ansible.builtin.file:
      path: billi/install-config.yaml
      state: absent
  - name: Remove agent-config.yaml
    ansible.builtin.file:
      path: billi/agent-config.yaml
      state: absent
  - name: Wait for install to complete
    ansible.builtin.command:
      cmd: ./openshift-install wait-for install-complete --dir billi --log-level debug
